import os
import telebot
import logging
from tg_mailcow_aliases.api import add_alias
from tg_mailcow_aliases.sqlite import is_user_exist, get_user

logging.basicConfig(
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s",
    level=logging.INFO,
)

TG_BOT_TOKEN = os.getenv("TG_BOT_TOKEN", "error")
USER_ID = os.getenv("USER_ID", "error")

logging.info(f"USER_ID = {USER_ID}")

bot = telebot.TeleBot(TG_BOT_TOKEN)


@bot.message_handler(commands=["start", "help"])
def start(message):
    user_id = message.from_user.id
    if not is_user_exist(user_id):
        bot.reply_to(message, "403 Forbidden")
        return
    (_, name, domain, goto) = get_user(user_id)
    logging.info(f"{name} {domain} {goto}")
    bot.reply_to(message, f"Hi {name}, aliases for {domain} is goto {goto}")


@bot.message_handler(func=lambda message: True)
def handle_message(message):
    """–ü–æ–ª—É—á–∞–µ—Ç —Å—Ç—Ä–æ–∫—É –∏ —Å–æ–∑–¥–∞–µ—Ç –∞–ª–∏–∞—Å.
    –ü—Ä–∏–º–µ—Ä –æ—Ç–≤–µ—Ç–∞ —Å–µ—Ä–≤–µ—Ä–∞
            [
            {
                    "log": [
                    "mailbox",
                    "add",
                    "alias",
                    {
                            "active": "1",
                            "address": "alias@domain.tld",
                            "goto": "destination@domain.tld"
                    },
                    null
                    ],
                    "msg": [
                    "alias_added",
                    "alias@domain.tld"
                    ],
                    "type": "success"
            }
            ]
    """
    # –ø–æ–ª—É—á–µ–Ω—ã–π —Ç–µ–∫—Å—Ç –Ω–∞—à–∞ –ª–µ–≤–∞—è —á–∞—Å—Ç—å
    alias = message.text
    # –∞–π–¥–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_id = str(message.from_user.id)
    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —Ä–∞–∑—Ä–µ—à–µ–Ω —Ç–æ –æ—Ç–ª—É–ø
    if user_id != USER_ID:
        bot.reply_to(message, "403 Forbidden")
        return
    logging.info(f"User - {user_id}, URL - {alias}")
    # —Å–æ–∑–¥–∞–µ–º –∞–ª–∏–∞—Å. –ü–æ —É–º–æ–ª—á–∞–Ω–∏ –º–æ–∂–Ω–æ –ø–µ—Ä–µ–¥–∞—Ç—å —Ç–æ–ª—å–∫–æ –ª–µ–≤—É—é —á–∞—Å—Ç—å –∞–ª–∏–∞—Å–∞
    # —Ç–∞–º –µ—Å—Ç—å –¥–µ—Ñ–æ–ª—Ç–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
    (status_code, result) = add_alias(alias)
    # STATUS_CODE –æ—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞. –ï—Å–ª–∏ –Ω–µ 200 –∑–Ω–∞—á–∏—Ç —á—Ç–æ —Ç–æ –Ω–µ —Ç–∞–∫ –≤ –ø—Ä–∏–Ω—Ü–∏–ø–µ
    # –Ω–µ —Å–≤—è–∑–∏ –∏–ª–∏ —Å–µ—Ä–≤–µ—Ä –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç
    logging.info(f"STATUS_CODE = {status_code}")
    # result —ç—Ç–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç. –í—ã—à–µ –µ—Å—Ç—å –ø—Ä–∏–º–µ—Ä –æ—Ç–≤–µ—Ç–∞
    logging.info(f"Server response = {result}")
    # –ï—Å–ª–∏ –Ω–µ 200 —Ç–æ –∫–∞–∫–∞—è —Ç–æ –æ—à–∏–±–∫–∞ –Ω–∞–¥–æ —Å–º–æ—Ç—Ä–µ—Ç—å –≤ –ª–æ–≥–∏
    if status_code != 200:
        bot.reply_to(message, "General error")
        return
    result_type = result[0]["type"]
    # –ï—Å–ª–∏ —Å–æ–∑–¥–∞–ª–∏ —Ç–æ –æ—Ç–≤–µ—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —á—Ç–æ –∞–ª–∏–∞—Å —Å–æ–∑–¥–∞–Ω
    if result_type == "success":
        alias = result[0]["log"][3]["address"]
        goto = result[0]["log"][3]["goto"]
        bot.reply_to(message, f"‚úÖ Success!\nAddress {alias} goto {goto}")
    else:
        # –ï—Å–ª–∏ –Ω–µ —Å–º–æ–≥–ª–∏ —Ç–æ —Å–æ–æ–±—â–∞–µ–º –æ–± –æ—à–∏–±–∫–µ
        # –∏ –≤—ã–≤–æ–¥–∏–º —Ç–æ —á—Ç–æ –Ω–∞–º —Å–µ—Ä–≤–µ—Ä –ø—Ä–∏—Å–ª–∞–ª
        msg = f"{result[0]['msg'][0]} {result[0]['msg'][1]}"
        bot.reply_to(message, f"üÜò Failed!\nTYPE = {result_type}\n{msg}")


def start_bot():
    bot.polling()
